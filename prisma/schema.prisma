// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// add ociadsions, 
model User {
  id        String   @id @default(cuid())
  name      String?
  gender    Gender
  occasions String[]
  email     String   @unique
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clothes   Clothe[]
  fits      Fit[]
}

enum Gender {
  M
  F
}

model Clothe {
  id          String     @id @default(cuid())
  type        ClotheType
  name        String
  link        String
  description String?
  color       String?
  price       Float?
  imageUrl    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation to user
  userId String
  user   User   @relation(fields: [userId], references: [id])

  //Relation to fits:
  topFits         Fit[] @relation("TopClothe")
  lowerFits       Fit[] @relation("LowerClothe")
  footWearFits    Fit[] @relation("FootWearClothe")
  accessoriesFits Fit[] @relation("AccessoriesClothe")
}

enum ClotheType {
  Top
  Lower
  FootWear
  Accessories
}

model Fit {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  // Each fit belongs to a user
  userId String
  user   User   @relation(fields: [userId], references: [id])

  // Each fit can link to one item of each category
  topId String?
  top   Clothe? @relation("TopClothe", fields: [topId], references: [id])

  lowerId String?
  lower   Clothe? @relation("LowerClothe", fields: [lowerId], references: [id])

  footWearId String?
  footWear   Clothe? @relation("FootWearClothe", fields: [footWearId], references: [id])

  accessoriesId String?
  accessories   Clothe? @relation("AccessoriesClothe", fields: [accessoriesId], references: [id])
}
